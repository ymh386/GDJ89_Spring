<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- namespace의 중복 X -->
  <!-- 사용하는 DAO의 패키지명.클래스명을 주로 사용 -->
  <mapper namespace="com.moon.app.products.ProductDAO">
  	<select id="test" resultType="java.lang.Long">
  		SELECT COUNT(PRODUCTNUM) FROM PRODUCTS
  	</select>
  	
  	<select id="test2" resultType="java.util.Map">
  		SELECT MAX(PRODUCTRATE) AS M, MIN(PRODUCTRATE), COUNT(PRODUCTNUM), FROM PRODUCTS
  	</select>
  
  	<!-- DAO의 메서드명을 ID로 사용 -->
  	<select id="getList" parameterType="Pager" resultType="ProductDTO">
  		<!-- ResultType => 컬럼명과 DTO의 setter의 이름과 같은 것을 맵핑 -->
  		SELECT * FROM 
			(SELECT ROWNUM R, M.* FROM 
				(
					SELECT * 
					FROM products 
					WHERE 
					<!-- #사용하지 않음 -->
					<choose>
						<when test="kind=='k2'">
						PRODUCTDETAIL LIKE '%'||#{search}||'%'
						</when>
						<when test="kind=='k3'">
						PRODUCTNAME LIKE '%'||#{search}||'%'
						OR
						PRODUCTDETAIL LIKE '%'||#{search}||'%'
						</when>
						<otherwise>
						PRODUCTNAME LIKE '%'||#{search}||'%'
						</otherwise>
					</choose>
					ORDER BY PRODUCTNUM DESC
				 ) M
			 )
		WHERE R BETWEEN #{startNum} AND #{endNum}
  	</select>
  	
  	<select id="count" resultType="java.lang.Long" parameterType="Pager">
  		SELECT COUNT(PRODUCTNUM) FROM PRODUCTS 
  		WHERE PRODUCTNUM > 0 AND 
  		<choose>
  			<when test="kind=='k2'">
  				PRODUCTDETAIL LIKE '%'||#{search}||'%'
  			</when>
  			<when test="kind=='k3'">
  				PRODUCTNAME LIKE '%'||#{search}||'%'
				OR
				PRODUCTDETAIL LIKE '%'||#{search}||'%'
  			</when>
  			<otherwise>
  				PRODUCTNAME LIKE '%'||#{search}||'%'
  			</otherwise>
  		</choose>
  		
  	</select>
  	
  	<select id="getDetail" resultType="ProductDTO" parameterType="ProductDTO">
  		<!-- ? 값 #{getter의 이름, 변수명} -->
  		<!-- map #{map 키}, 배열또는리스트 #{index번호} -->
  		SELECT * FROM PRODUCTS WHERE PRODUCTNUM=#{productNum}
  	</select>
  	
  	<insert id="add" parameterType="ProductDTO">
  		INSERT INTO PRODUCTS VALUES (PRODUCTS_SEQ.NEXTVAL, #{productName}, #{productRate}, #{productDate}, #{productDetail})
  	</insert>
  	
  	<update id="update" parameterType="ProductDTO">
  		UPDATE PRODUCTS SET PRODUCTNAME=#{productName}, PRODUCTRATE=#{productRate}, PRODUCTDATE=#{productDate}, PRODUCTDETAIL=#{productDetail} 
  		WHERE PRODUCTNUM=#{productNum}
  	</update>
  	
  	<delete id="delete" parameterType="ProductDTO">
  		DELETE PRODUCTS WHERE PRODUCTNUM=#{productNum}
  	</delete>
  	
  	<insert id="addComments" parameterType="CommentsDTO">
  		INSERT INTO COMMENTS 
			(BOARDNUM, BOARDCONTENT, BOARDDATE, USERNAME, PRODUCTNUM)
		VALUES 
			(NOTICE_SEQ.NEXTVAL,#{boardContent}, sysdate, #{userName}, #{productNum})
  	</insert>
  	
  	<select id="getCommentList" parameterType="Map" resultType="CommentsDTO">
	  	SELECT * FROM
  		(
	  		SELECT ROWNUM R, C.* FROM
	  		(
	  			SELECT * FROM COMMENTS
	  			WHERE PRODUCTNUM=#{comments.productNum}
	  			ORDER BY BOARDNUM DESC
	  		)C
  		)
  		WHERE R BETWEEN #{pager.startNum} AND #{pager.endNum}
  	</select>
  	
  	<select id="getCommentsTotalCount" parameterType="CommentsDTO" resultType="Long">
  		SELECT COUNT(BOARDNUM) FROM COMMENTS WHERE PRODUCTNUM=#{productNum}
  	</select>
  	
  	<delete id="deleteComments" parameterType="CommentsDTO">
  		DELETE COMMENTS WHERE BOARDNUM = #{boardNum} AND USERNAME = #{userName}
  	</delete>
  
  </mapper>